
CMAKE_MINIMUM_REQUIRED(VERSION 3.0)
PROJECT(wee C CXX)

IF(NOT CMAKE_CONFIGURATION_TYPES AND NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE Debug)
ENDIF()

IF(UNIX)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fpic -Wall -Wextra -std=c++11")
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fpic")

    IF(ANDROID)
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fexceptions")

		SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib/${ANDROID_ABI}/${CMAKE_BUILD_TYPE} )
		SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib/${ANDROID_ABI}/${CMAKE_BUILD_TYPE} )
		SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin/${ANDROID_ABI}/${CMAKE_BUILD_TYPE} )

		#SET(BUILD_STATIC_LIBRARIES OFF CACHE BOOL "Build static libraries" FORCE)
		#SET(BUILD_DYNAMIC_LIBRARIES ON CACHE BOOL "Build dynamic libraries" FORCE)
		#SET(LIBRARY_TYPE SHARED)
    ELSEIF(IOS)
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fobjc-abi-version=2 -fobjc-arc -x objective-c++")
        SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=gnu99")

		SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib/${CMAKE_CONFIGURATION_TYPE} )
	    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib/${CMAKE_CONFIGURATION_TYPE} )
    	SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin/${CMAKE_CONFIGURATION_TYPE} )

		#SET(BUILD_STATIC_LIBRARIES ON   CACHE BOOL "Build static libraries" FORCE)
		#SET(BUILD_DYNAMIC_LIBRARIES OFF CACHE BOOL "Build dynamic libraries" FORCE)
		#SET(LIBRARY_TYPE STATIC)
    ELSE()
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msse -msse2")

		SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib/${CMAKE_BUILD_TYPE} )
	    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib/${CMAKE_BUILD_TYPE} )
    	SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin/${CMAKE_BUILD_TYPE} )


		SET(LIBRARY_TYPE SHARED)

    ENDIF()
ELSEIF(WIN32)
    ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
    IF(WINDOWS_PHONE)
    ELSE()
    ENDIF()
ENDIF()

configure_file(
    ${CMAKE_CURRENT_SOURCE_DIR}/include/wee/config.h.in
    ${CMAKE_CURRENT_BINARY_DIR}/include/wee/config.h
)

LINK_DIRECTORIES(
    ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}
)

ADD_SUBDIRECTORY(vendor)
ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(tests)

