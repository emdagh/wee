// GLSL shader autogenerated by cg2glsl.py.
#if defined(VERTEX)

#if __VERSION__ >= 130
#define COMPAT_VARYING out
#define COMPAT_ATTRIBUTE in
#define COMPAT_TEXTURE texture
#else
#define COMPAT_VARYING varying
#define COMPAT_ATTRIBUTE attribute
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec4 _Color;
COMPAT_VARYING     vec2 _TexCoord;
COMPAT_VARYING     vec4 _Position;
COMPAT_VARYING     vec4 _Position1;
struct InputVS {
    vec4 _Position1;
};
struct OutputVS {
    vec4 _Position;
    vec2 _TexCoord;
};
struct OutputPS {
    vec4 _Color;
};
OutputVS _ret_0;
vec4 _r0006;
COMPAT_ATTRIBUTE vec4 Position;
COMPAT_VARYING vec4 TEX0;
uniform vec4 _wvp[4];
 
uniform mat4 MVPMatrix;
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    OutputVS _Out;
    _r0006.x = dot(_wvp[0], Position);
    _r0006.y = dot(_wvp[1], Position);
    _r0006.z = dot(_wvp[2], Position);
    _r0006.w = dot(_wvp[3], Position);
    _Out._TexCoord = Position.xy*5.00000000E-01 + 5.00000000E-01;
    _ret_0._Position = _r0006;
    _ret_0._TexCoord = _Out._TexCoord;
    gl_Position = _r0006;
    TEX0.xy = _Out._TexCoord;
    return;
    TEX0.xy = _ret_0._TexCoord;
} 
#elif defined(FRAGMENT)

#if __VERSION__ >= 130
#define COMPAT_VARYING in
#define COMPAT_TEXTURE texture
out vec4 FragColor;
#else
#define COMPAT_VARYING varying
#define FragColor gl_FragColor
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec4 _Color;
COMPAT_VARYING     vec2 _TexCoord;
COMPAT_VARYING     int dummy;
struct InputVS {
    int dummy;
};
struct OutputVS {
    vec2 _TexCoord;
};
struct OutputPS {
    vec4 _Color;
};
COMPAT_VARYING vec4 TEX0;
 
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    OutputPS _Out;
    _Out._Color = vec4(TEX0.x, TEX0.y, 0.00000000E+00, 1.00000000E+00);
    FragColor = _Out._Color;
    return;
} 
#endif
